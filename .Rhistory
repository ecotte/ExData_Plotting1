print(x)
msg <- "Hellp"
msg
msg <- "Hello"
msg
msg <- ## Test H1
#
##
""
msg
x <- x*3 ##
x
x*3
1
1L
1/5
1L/5
(1/5)L
(1/5)
X <- 1/5
x
xL
integer(X)
X <- 0.6
integer(X)
X <- 1.6
integer(X)
1/0
1/Inf
Inf/Inf
Inf/1
Inf/0
attributes(x)
attributes(X)
x <- 1:3
attributes(x)
X <- list(2,"A",TRUE)
X
as.character(X)
as.character.POSIXt(X)
X <- list(2,"A",,FALSE,TRUE)
X <- list(2,"A",4,FALSE,TRUE)
X
X <- list(2,"A",4,FALSE,TRUE,1:3)
X
attributes(X)
attributes(x)
m <- matrix(nrow = 4,ncol = 5)
m
attributes(m)
m <- matrix(1:6,nrow = 4,ncol = 5)
m <- matrix(1:20,nrow = 4,ncol = 5)
m
m <- matrix(1:5,nrow = 4,ncol = 5)
m
m <- matrix(1:4,nrow = 4,ncol = 5)
m
library(swirl)
swirl
swirl()
num_vect <- c(0.5,55,-10)
num_vect <- c(0.5,55,-10,6)
num_vect<1
tf <- num_vect<1
tf
num_vect>=6
my_char <- c("My","name","is")
my_char
paste(my_char,collapse = " ")
my_name <- c(my_char,"Edgar")
my_name
paste(my_char,collapse = " ")
paste(my_name,collapse = " ")
paste("Hello","world!",sep=" ")
paste(1:3,c("X","Y","Z"),sep = " ")
paste(1:3,c("X","Y","Z"),sep = "")
paste(LETTERS,1:4,sep = "-")
i<-1
i
i++
i
add2 <- function(z,y){
x+y
}
add2(2,3)
add2 <- function(z,y){
x+y
}
add2(3,5)
add2 <- function(x,y){
x+y
}
add2(3,5)
above <- function(x,n){
use <- x>n;
x[use];
}
above(c(1,4,5,6,2),2)
above <- function(x,n=10){
use <- x>n;
x[use];
}
above(1:20)
columnmean <- function(x){
nc<-ncol(x);
means <- numeric(nc);
for (i in 1:nc){
means[i]<-x[,i];
}
means;
}
my_data <- rnorm(100)
search()
lm <- function(x){
x+5
}
lm(5)
with(mtcars, tapply(mpg, cyl, mean))
?with
?tapply
with(mtcars, tapply(mpg, cyl, mean))
mtcars
tapply(mpg,cyl,mean)
mtcars
split(mtcars)
split(mtcars,mtcars$cyl)
split(mtcars,mtcars$cyl,c(4,8))
split(mtcars,mtcars$cyl==c(8,4))
split(mtcars,mtcars$cyl==8)
split(mtcars,mtcars$cyl==8|mtcars$cyl==4)
split(mtcars,mtcars$cyl==c(4,8))
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(hp, mean))
with(mtcars, tapply(hp,hp, mean))
with(mtcars, tapply(cyl,hp, mean))
with(mtcars, tapply(hp,cyl, mean))
x<-with(mtcars, tapply(hp,cyl, mean))
x
mtcars
mtcars$cyl == 8
mtcars[cyl == 8,]
mtcars["cyl" == 8,]
mtcars[,"cyl" == 8]
tapply(mtcars)
tapply(mtcars,mtcars$cyl,mean)
tapply(mtcars$hp,mtcars$cyl,mean)
tapply(mtcars$hp,c(4,8),mean)
tapply(mtcars$hp,c(repeat(4,nrow(mtcars)),repeat(8,nrow(mtcars))),mean)
repeat(4,nrow(mtcars))
tapply(mtcars$hp,c(rep(4,nrow(mtcars)),rep(8,nrow(mtcars))),mean)
rep(4,nrow(mtcars))
c(rep(4,nrow(mtcars)),rep(8,nrow(mtcars)))
tapply(mtcars$hp,mtcars$cyl!=6,mean)
tapply(mtcars$hp,mtcars$cyl,mean)
x<- mtcars[mtcars$cyl!=6,]
x
tapply(x$hp,x$cyl)
tapply(x$hp,x$cyl,mean)
tapply(x$hp,x$cyl)[1,]
tapply(x$hp,x$cyl)[1]
tapply(x$hp,x$cyl)[2]
tapply(x$hp,x$cyl)
tapply(x$hp,x$cyl,mean)
tapply(x$hp,x$cyl,mean)[1]
tapply(x$hp,x$cyl,mean)[2]
apply(tapply(x$hp,x$cyl,mean),1,function(x)print(x))
apply(tapply(x$hp,x$cyl,mean),1,function(x,y)print(x))
apply(tapply(x$hp,x$cyl,mean),1,function(x,y)print(y))
apply(tapply(x$hp,x$cyl,mean),1,function(x)print(x[1]))
apply(tapply(x$hp,x$cyl,mean),1,function(x)print(x[2]))
apply(tapply(x$hp,x$cyl,mean),2,function(x)print(x))
apply(tapply(x$hp,x$cyl,mean),1,function(x)print(x))
tapply(x$hp,x$cyl,mean)[2]
tapply(x$hp,x$cyl,mean)
tapply(x$hp,x$cyl,mean,simplify = FALSE)
apply(tapply(x$hp,x$cyl,mean,simplify = FALSE),1,sum)
apply(tapply(x$hp,x$cyl,mean,simplify = FALSE),2,sum)
apply(tapply(x$hp,x$cyl,mean),2,sum)
apply(tapply(x$hp,x$cyl,mean),1,sum)
tapply(x$hp,x$cyl,mean)
tapply(x$hp,x$cyl,mean)
y<-tapply(x$hp,x$cyl,mean)
abs(y[1]-y[2])
split(x$hp,x$cyl)
library(swirl)
swirl()
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population,
| flags$red, summary)
tapply(flags$population,
flags$red, summary)
tapply(flags$population,
flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,n = 10)
tail(plants)
tail(plants,n = 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
sample()
sample(2)
?sample
sample(1:6,4,replace = TRUE)
sample(1:6,4,replace = TRUE)
sample(1:20,10,replace = FALSE)
sample(1:20,10)
LETTERS
sample(LETTERS)
sample(c(0,1),100,replace = TRUE,prob = c(0.3,0.7))
flips <- sample(c(0,1),100,replace = TRUE,prob = c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2<-sample(rbinom(1, size = 100, prob = 0.7),100)
flips2<-sample(rbinom(1, size = 100, prob = 0.7),100,replace = FALSE)
flip2<-rbinom(1, size = 100, prob = 0.7)
flip2<-rbinom(100, size = 11, prob = 0.7)
flip2<-rbinom(100, size = 1, prob = 0.7)
flip2<-rbinom(1,n = 100, size = 1, prob = 0.7)
flip2<-rbinom(n = 100, size = 1, prob = 0.7)
?rbinom
flips2 <- rbinom(n = 100, size = 1, prob = 0.7)
flips2
sum(flips2)
rm(flip2)
?rnorm
rnorm(10)
rnorm(10,mean = 100,sd = 25)
?rpois
rpois(10)
rpois(10,5)
rpois(5,10)
replicate(100,rpois(5,10))
my_pois <- replicate(100, rpois(5, 10))
my_pois
colMeans(my_pois)
cm<-colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
ckass(t2)
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(t2)
weekdays(d1)
months(t1)
quarters(t1)
quarters(t2)
t3 <- strptime("October 17, 1986 08:24")
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed,y y = cars$dist)
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$dist, y = cars$speed,xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist,  ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance",main = "My Plot")
plot(cars, main = "My Plot")
plot(cars,sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10,15))
plot(cars, xlim = pch = 2)
plot(cars,  pch = 2)
data("mtcars")
data(mtcars)
dim(mtcars)
?boxplot
boxplot(data = mtcars, formula = mpg ~ cyl)
boxplot(mtcars, formula = mpg ~ cyl)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
set.seed(1)
rpois(5, 2)
rpois(5, 2)
?rpois
?rnorm
?rpois
?qpois
traceback()
boxplot(data = mtcars, formula = mpg ~ cyl)
traceback()
lm(y ~ x)
traceback()
debug(lm)
lm(y ~ x)
undebug(lm)
lm(y ~ x)
options()
options()$error
str(lm)
str(str)
?ppois
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
rpois(5,2)
rpois(5,2)
rpois(5,2)
set.seed(1)
rpois(5, 2)
rpois(5,2)
rpois(5,2)
rnorm(10, 0, 20)
rnorm(10, 0, 20)
rnorm(10, 0, 20)
rnorm(10, 0, 20)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
y
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
y
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
ppois
system.time()
system.time(lm)
system.time(readLines(http://www.google.com))
system.time(readLines("http://www.google.com"))
system.time(readLines("http://abc.es"))
Rprof()
lm(y~x)
Rprof(null)
Rprof(NULL)
lm(y~x)
lm(y~x)
lm(y~x)
Rprof()
lm(y~x)
Rprof(NULL)
summaryRprof()
set.seed(1)
rpois(5, 2)
setwd("~/ExData_Plotting1")
#Plot 2, creates a line plot of the Global Active Power
#Load the data.table. Must have the Library installed, if not run install.packages("data.table")
library(data.table);
#File Location
file_source = "Data/household_power_consumption.txt";
#Read the file with fread, use character as the column classes for faster load.
x<-fread(file_source,header = TRUE,colClasses = "character");
#Convert Date column to Date class
x$Date<-as.Date(x$Date,"%d/%m/%Y");
#Filter data to use only february 01 and 02 of 2007
x<-x[x$Date==as.Date("2007-02-02")|x$Date==as.Date("2007-02-01")];
#Convert Global_active_power column to Double
x$Global_active_power<-as.double(x$Global_active_power);
plot(x$Date,x$Global_active_power,type="l", xlab="", ylab="Global Active Power (kilowatts)")
plot(x$Date,x$Global_active_power,type = 1)
plot(x$Date,x$Global_active_power,type = "l")
#Load the data.table. Must have the Library installed, if not run install.packages("data.table")
library(data.table);
#File Location
file_source = "Data/household_power_consumption.txt";
#Read the file with fread, use character as the column classes for faster load.
x<-fread(file_source,header = TRUE,colClasses = "character");
#Convert Date column to Date class
x$Date<-<- strptime(data$dates, "%Y-%m-%d %H:%M:%S")
#Convert Date column to Date class
x$Date<-<- strptime(x$Date, "%Y-%m-%d %H:%M:%S")
#Convert Date column to Date class
x$Date<- strptime(x$Date, "%Y-%m-%d %H:%M:%S")
#Load Data
proj_data = read.delim2(file = "Data/household_power_consumption.txt",sep = ";",stringsAsFactors=F)
proj_data$datetime = as.POSIXlt(paste(proj_data$Date,proj_data$Time),format = "%d/%m/%Y %H:%M:%S")
proj_data$Date = as.Date(proj_data$Date,format = "%d/%m/%Y")
head(proj_data)
sub_data = proj_data[proj_data$Date >= as.Date("2007-02-01",format = "%Y-%m-%d") & proj_data$Date <= as.Date("2007-02-02",format = "%Y-%m-%d"),]
#Make plots
plot(sub_data$datetime,as.numeric(sub_data$Global_active_power),type="l",ylab = "Global Active Power (kilowatts)",xlab="")
#Plot 1, creates a histogram of the Global Active Power
#Load the data.table. Must have the Library installed, if not run install.packages("data.table")
library(data.table);
#File Location
file_source = "Data/household_power_consumption.txt";
#Read the file with fread, use character as the column classes for faster load.
x<-fread(file_source,header = TRUE,colClasses = "character");
x[,datetime := strptime(paste(x$Date,x$Time),"%d/%m/%Y %H:%M:%S")]
#Convert Date column to Date class
x$Date<-as.Date(x$Date,"%d/%m/%Y");
#Filter data to use only february 01 and 02 of 2007
x<-x[x$Date==as.Date("2007-02-02")|x$Date==as.Date("2007-02-01")];
#Convert Global_active_power column to Double
x$Global_active_power<-as.double(x$Global_active_power);
#Open PNG Graphic Device
png("plot1.png");
#Plot histogram of the Global_active_power
hist(x$Global_active_power,main = "Global Active Power",col = "red",xlab = "Global Active Power (kilowatts)");
#Close Graphic Device
dev.off()
#Plot 1, creates a histogram of the Global Active Power
#Load the data.table. Must have the Library installed, if not run install.packages("data.table")
library(data.table);
#File Location
file_source = "Data/household_power_consumption.txt";
#Read the file with fread, use character as the column classes for faster load.
x<-fread(file_source,header = TRUE,colClasses = "character");
x[,datetime := strptime(paste(x$Date,x$Time),"%d/%m/%Y %H:%M:%S")]
#Convert Date column to Date class
x$Date<-as.Date(x$Date,"%d/%m/%Y");
#Filter data to use only february 01 and 02 of 2007
x<-x[x$Date==as.Date("2007-02-02")|x$Date==as.Date("2007-02-01")];
#Convert Global_active_power column to Double
x$Global_active_power<-as.double(x$Global_active_power);
#Plot 1, creates a histogram of the Global Active Power
#Load the data.table. Must have the Library installed, if not run install.packages("data.table")
library(data.table);
#File Location
file_source = "Data/household_power_consumption.txt";
#Read the file with fread, use character as the column classes for faster load.
x<-fread(file_source,header = TRUE,colClasses = "character");
#Filter data to use only february 01 and 02 of 2007
x<-x[x$Date=="1/2/2007"|x$Date=="2/2/2007"];
x[,datetime := strptime(paste(x$Date,x$Time),"%d/%m/%Y %H:%M:%S")]
#Convert Date column to Date class
#Convert Global_active_power column to Double
x$Global_active_power<-as.double(x$Global_active_power);
#Plot histogram of the Global_active_power
hist(x$Global_active_power,main = "Global Active Power",col = "red",xlab = "Global Active Power (kilowatts)");
plot(x$datetime,x$Global_active_power,type = "l",xaxt = "n",xlab = "",ylab = "Global Active Power (kilowatts)");
x$datetime
plot(x$datetime,x$Global_active_power,type = "l",xaxt = "n",xlab = "",ylab = "Global Active Power (kilowatts)");
plot(x$Date,x$Global_active_power,type = "l",xaxt = "n",xlab = "",ylab = "Global Active Power (kilowatts)");
class(x$datetime)
plot(x$Date,x$Global_active_power,type = "l",xaxt = "n",xlab = "",ylab = "Global Active Power (kilowatts)");
#Convert Date column to Date class
x$Date<-as.Date(x$Date,"%d/%m/%Y");
plot(x$Date,x$Global_active_power,type = "l",xaxt = "n",xlab = "",ylab = "Global Active Power (kilowatts)");
plot(x$Date,x$Global_active_power,type = "l",xlab = "",ylab = "Global Active Power (kilowatts)");
#Plot 1, creates a histogram of the Global Active Power
#Load the data.table. Must have the Library installed, if not run install.packages("data.table")
library(data.table);
#File Location
file_source = "Data/household_power_consumption.txt";
#Read the file with fread, use character as the column classes for faster load.
x<-fread(file_source,header = TRUE,colClasses = "character");
#Filter data to use only february 01 and 02 of 2007
x<-x[x$Date=="1/2/2007"|x$Date=="2/2/2007"];
x[,datetime := strptime(paste(x$Date,x$Time),"%d/%m/%Y %H:%M:%S")]
x$datetime <- strptime(paste(x$Date,x$Time),"%d/%m/%Y %H:%M:%S")
x$datetime <- strptime(paste(x$Date,x$Time),"%d/%m/%Y %H:%M:%S")
head(strptime(paste(x$Date,x$Time),"%d/%m/%Y %H:%M:%S"))
strptime(paste(x$Date,x$Time),"%d/%m/%Y %H:%M:%S")
x$datetime<-strptime(paste(x$Date,x$Time),"%d/%m/%Y %H:%M:%S")
plot(x$Date,x$Global_active_power,type = "l",xlab = "",ylab = "Global Active Power (kilowatts)");
